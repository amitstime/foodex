@model FoodExNepal.Models.WebsiteProfile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Website Profile</h2>

@using (Html.BeginForm("Edit", "WebsiteProfile", FormMethod.Post, new { enctype = "Multipart/Form-data" }))
{
    @Html.ValidationSummary(true)

    <div id="add">
        @Html.HiddenFor(model => model.ProfileId)
      @*  <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.ProfileId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProfileId)
            @Html.ValidationMessageFor(model => model.ProfileId)
        </div>
        <div style="clear:both"></div>*@
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.Logo)
        </div>
        <div class="editor-field">
            <img src="~/images/homepageimage/11logo.png" height="80px"/><br />
             <input type="file" id="fileArticle1" name="fileArticle1" value="choose file" onchange="checkfile(this);"/>
            <input type="button" id="clear3" value="Remove" onclick="clearfile1();"/>
             @Html.HiddenFor(model => model.Logo)
            @Html.ValidationMessageFor(model => model.Logo)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.ContactNumber, "Contact")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactNumber)
            @Html.ValidationMessageFor(model => model.ContactNumber)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.HomePageImage, "Home Page Popup Image")
        </div>
         <div class="editor-field">
            <img src="~/images/homepageimage/11picnew.jpg" width="250px" /><br />
           <input type="file" id="fileArticle" name="fileArticle" value="choose file" onchange="checkfile(this);"/>
            <input type="button" id="clear2" value="Remove" onclick="clearfile();"/>
            @Html.HiddenFor(model => model.HomePageImage)
            @Html.ValidationMessageFor(model => model.HomePageImage)
        </div>
       @* <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.FacebookLink, "Facebook Link")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FacebookLink)
            @Html.ValidationMessageFor(model => model.FacebookLink)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.TwitterLink, "Twitter Link")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TwitterLink)
            @Html.ValidationMessageFor(model => model.TwitterLink)
        </div>
        <div style="clear:both"></div>
       <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.WelcometoFoodexNepalCaption, "Welcome to Foodex caption")
        </div>
        <div class="editor-field" style="width:255px" >
            @Html.EditorFor(model => model.WelcometoFoodexNepalCaption)
            @Html.ValidationMessageFor(model => model.WelcometoFoodexNepalCaption)
        </div>
        <div style="clear:both"></div>
        
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.WelcometoFoodexNepal, "Welcome to Foodex Content")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.WelcometoFoodexNepal, new { @cols = 45, @rows = 6 })
            @Html.ValidationMessageFor(model => model.WelcometoFoodexNepal)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.WhyFoodExNepalCaption, "Why FoodEx Nepal Caption")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.WhyFoodExNepalCaption)
            @Html.ValidationMessageFor(model => model.WhyFoodExNepalCaption)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.WhyFoodExNepal, "Why FoodEx Nepal Content")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.WhyFoodExNepal, new { @cols = 45, @rows = 6 })
            @Html.ValidationMessageFor(model => model.WhyFoodExNepal)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.GooglePlaystoreLink, "Google PlayStore Link")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GooglePlaystoreLink)
            @Html.ValidationMessageFor(model => model.GooglePlaystoreLink)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.ItunesLink, "itunes Link")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItunesLink)
            @Html.ValidationMessageFor(model => model.ItunesLink)
        </div> *@
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.DeliveryCharge, "Delivery Charge")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryCharge)
            @Html.ValidationMessageFor(model => model.DeliveryCharge)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label" style="width:255px">
            @Html.LabelFor(model => model.DeliveryChargeOutsideRingRoad, "Delivery Charge (outside ringroad)")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryChargeOutsideRingRoad)
            @Html.ValidationMessageFor(model => model.DeliveryChargeOutsideRingRoad)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label"  style="width:255px">
            @Html.LabelFor(model => model.ServiceHour, "Service Hour")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ServiceHour)
            @Html.ValidationMessageFor(model => model.ServiceHour)
        </div>
        <div style="clear:both"></div>
        <div class="editor-label"  style="width:255px"></div>
        <div class="editor-field">
            <input type="submit" value="Save" />
        </div>
        <div style="clear:both"></div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" language="javascript">
    function checkfile(sender) {
        var validExts = new Array(".JPG", ".JPEG", ".JIF", ".PNG", "GIF");
        var fileExt = sender.value;
        fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
        if (validExts.indexOf(fileExt.toUpperCase()) < 0) {
            alert("Invalid file selected, valid files are of " +
                     validExts.toString() + " types.");
            // var _fileuploadcontrolId = document.getElementById("att3");
            // _fileuploadcontrolId.value = "";
            // _fileuploadcontrolId.focus();
            sender.value = "";
            sender.focus();
            return false;
        }
        else return true;
    }
    function clearfile() {
        document.getElementById("fileArticle").value = '';
    }
    function clearfile1() {
        document.getElementById("fileArticle1").value = '';
    }
</script>
}
